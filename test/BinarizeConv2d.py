import torch
import torch.nn.functional as F

# 定义输入数据和自定义卷积核 多通道输入
mc_conv_kernels = torch.tensor([
[
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
],
[
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, ],
        [-1.0, -1.0, 1.0, ],
        [-1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, 1.0, -1.0, ],
        [-1.0, -1.0, -1.0, ],
        [1.0, -1.0, -1.0, ],
    ],
],
], dtype=torch.float32) # 自定义的卷积核形状为 [out_channels, in_channels, kernel_height, kernel_width]

mc_conv_kernels_1x1 = torch.tensor([
[
    [
        [1.0],

    ],
    [
        [-1.0 ],

    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0,],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
],
[
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
    [
        [1.0],
    ],
    [
        [-1.0],
    ],
    [
        [-1.0],
    ],
],
], dtype=torch.float32) # 自定义的卷积核形状为 [out_channels, in_channels, kernel_height, kernel_width]


mc_input_data = torch.tensor([
[
     [
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
    ],
    [
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
    ],
    [
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
    ],
    [
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, ],
    ],
    [
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, ],
        [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, ],
    ],
],
], dtype=torch.float32)   # 输入数据的形状为 [batch_size, channels, height, width]

# 使用自定义的卷积核进行深度卷积
# mc_input_data = F.pad(mc_input_data, (1, 1, 1, 1), mode='constant', value=-1)
depthwise_output = F.conv2d(mc_input_data, mc_conv_kernels, padding=1, stride=1)
# depthwise_output = F.conv2d(mc_input_data, mc_conv_kernels_1x1, padding=0, stride=2)
# # 将多个输出通道合并为一个输出通道
# combined_output = depthwise_output.sum(dim=1, keepdim=True)

# 输出结果
print("Input data shape:", mc_input_data.shape)
print("Custom convolution kernels shape:", mc_conv_kernels.shape)
# print("Depthwise output shape:", depthwise_output.shape)
print("Example output data:\n", depthwise_output)
print("Example input data:\n", mc_input_data)